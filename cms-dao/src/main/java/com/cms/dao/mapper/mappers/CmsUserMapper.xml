<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cms.dao.mapper.CmsUserMapper">
    <sql id="baseColumn">
        id,
        username,
        password,
        salt,
        email,
        is_backend,
        is_supper,
        register_time,
        register_ip,
        login_count,
        status,
        is_delete
    </sql>

    <sql id="key">
        username,
        password,
        salt,
        email,
        is_backend,
        is_supper,
        register_time,
        register_ip,
        status,
        create_time
    </sql>
    <sql id="value">
        #{username},
        #{password},
        #{salt},
        #{email},
        #{backend},
        #{supper},
        #{registerTime},
        #{registerIp},
        #{status},
        #{createTime}
    </sql>

    <sql id="updateField">
        update_time = #{updateTime},
        <if test="username!=null and username!=''">
            username = #{username},
        </if>
        <if test="password!=null and password!=''">
            password = #{password},
        </if>
        <if test="salt!=null and salt!=''">
            salt = #{salt},
        </if>
        email = #{email},
        is_backend = #{backend},
        is_supper = #{supper},
        <if test="status!=null and status!=''">
            status = #{status},
        </if>
    </sql>
    
    <resultMap id="baseResultMap" type="com.cms.dao.entity.CmsUserEntity">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="salt" column="salt"/>
        <result property="email" column="email"/>
        <result property="backend" column="is_backend"/>
        <result property="supper" column="is_supper"/>
        <result property="registerTime" column="register_time"/>
        <result property="registerIp" column="register_ip"/>
        <result property="loginCount" column="login_count"/>
        <result property="status" column="status"/>
        <result property="delete" column="is_delete"/>
        <result property="status" column="status"/>
    </resultMap>

    <update id="update">
        update cms_user
        <trim prefix="set" suffixOverrides=",">
            <include refid="updateField"></include>
        </trim>
        where id = #{id}
    </update>
    
    <select id="getByUsername" resultMap="baseResultMap">
        select <include refid="baseColumn"/> from cms_user
        where username = #{username} and is_delete = 0
    </select>

    <select id="selectByEmail" resultMap="baseResultMap">
        select <include refid="baseColumn"/> from cms_user
        where email = #{email} and is_delete = 0
    </select>

    <select id="selectAll" resultMap="baseResultMap">
        select <include refid="baseColumn"/> from cms_user
        where is_delete = 0
        <if test="criteria.username!=null and criteria.username!=''">
            and username like contact('%',contract(#{username},'%'))
        </if>
    </select>

    <select id="selectById" resultMap="baseResultMap">
        select <include refid="baseColumn"/> from cms_user
        where is_delete = 0 and id = #{id}
    </select>


    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into cms_user (<include refid="key"/>) values  (<include refid="value"/>)
    </insert>

    <update id="updateLoginCount">
        update cms_user set login_count = login_count + 1 where id = #{id}
    </update>

    <delete id="deleteById" >
        delete from cms_user where id = #{id}
    </delete>

</mapper>