<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!--jedis连接池需要-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!--连接池中最多可空闲连接，意思是即使没有数据库连接，依然可以保留这么多空闲的连接-->
        <property name="maxIdle" value="20"/>
        <!--最大等待时间 当没有连接时 连接池等待连接被归还的最大时间 毫秒计算 超过时间则抛出异常-->
        <property name="maxWaitMillis" value="1000"/>
        <!--获取连接的时候检查有效性-->
        <property name="testOnBorrow" value="true"/>
    </bean>

    <!--连接池配置 类似于数据库连接池-->
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="poolConfig" ref="jedisPoolConfig"/>
        <property name="usePool" value="true"/>
        <property name="hostName" value="127.0.0.1"/>
        <property name="password" value="1234"/>
        <property name="database" value="0"/>
    </bean>

    <!--使用spring为我们配置好的redisTemplate来操作redis-->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="keySerializer" ref="stringRedisSerializer"/>
        <property name="valueSerializer" ref="stringRedisSerializer"/>
    </bean>
    <!--redis序列化 不使用jdk自带-->
    <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>

</beans>